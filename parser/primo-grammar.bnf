/**
*   S-expression parser.
*   Atom: 42, foo, bar, "Hello World"
*   List: (), (+ 5 x), (print "hello)
*   just contextualizing examples
*/

// Lexical grammar (tokens)

%lex

%%

\s+     /* skip whitespace */

\"[^\"]*\"         return 'STRING'

\d+             return 'NUMBER'

[\w\-+*=<>/]    return 'SYMBOL'

/lex

// Syntatic grammar (bnf)

%%
Exp
    : Atom
    | List
    ;

Atom
    : NUMBER { $$ = Number($1) }
    | STRING
    | SYMBOL
    ;

List
    : '(' ListEntries ')' { $$ = $2 }
    ;

ListEntries
    : ListEntries Exp { $1.push($2); $$ = $1 }
    | /* empty */     { $$ = []}
    ;